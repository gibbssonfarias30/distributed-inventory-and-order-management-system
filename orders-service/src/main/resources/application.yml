server:
  port: 8988

spring:
  application:
    name: orders-service
  datasource:
    url: jdbc:mysql://localhost:3306/ms_orders
    username: root
    password: gibb
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect
        show_sql: true
        format_sql: true
    hibernate:
      ddl-auto: update

  #Keycloak
  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: http://localhost:8181/realms/microservices-realm/protocol/openid-connect/certs

#Eureka client
eureka:
  client:
    service-url:
      default-zone: http://eureka:password@localhost:8761/eureka
  instance:
    instance-id: ${spring.application.name}:${spring.application.instance_id:${random.value}}


#Actuator
management:
  endpoints:
    web:
      exposure:
        include: health
      base-path: /actuator/orders
  endpoint:
    health:
      show-details: always
  health:
    circuitbreakers:
      enabled: true

#Resilience4j - Circuit Breaker
resilience4j:
  circuitbreaker:
    instances:
      orders-service:
        register-health-indicator: true
        sliding-window-size: 5
        sliding-window-type: count_based
        failure-rate-threshold: 50
        wait-duration-in-open-state: 10s
        automatic-transition-from-open-to-half-open-enabled: true
        permitted-number-of-calls-in-half-open-state: 3

#Kafka
spring.kafka.bootstrap-servers: localhost:9092
spring.kafka.producer.retries: 1
spring.kafka.producer.key-serializer: org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer: org.apache.kafka.common.serialization.StringSerializer
